---
interface Feature {
  title: string;
  description: string;
  icon: string;
}

interface Props {
  title: string;
  features: Feature[];
}

const { title, features } = Astro.props;
---

<section class="features-section" id="features">
  <div class="container">
    <h2>{title}</h2>
    <div class="features-grid">
      {
        features.map((feature) => (
          <div class="feature-card">
            <div class="feature-icon">
              <i class={feature.icon} />
            </div>
            <h3>{feature.title}</h3>
            <p>{feature.description}</p>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  .features-section {
    padding: 7rem 2rem;
    background-color: var(--off-white);
    position: relative;
  }

  .features-section::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(
      rgba(201, 166, 84, 0.05) 1px,
      transparent 1px
    );
    background-size: 20px 20px;
    z-index: 1;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
    z-index: 2;
  }

  h2 {
    text-align: center;
    font-size: 2.5rem;
    color: var(--text-dark);
    margin-bottom: 4rem;
    position: relative;
    font-family: "Playfair Display", serif;
    font-weight: 600;
  }

  h2:after {
    content: "";
    position: absolute;
    bottom: -20px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 2px;
    background-color: var(--gold);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2.5rem;
  }

  .feature-card {
    background-color: white;
    padding: 3rem 2rem;
    border-radius: 0;
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.03);
    text-align: center;
    transition: all 0.4s ease;
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(201, 166, 84, 0.05);
  }

  .feature-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 0;
    background-color: var(--gold);
    transition: height 0.4s ease;
  }

  .feature-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.06);
    border-color: rgba(201, 166, 84, 0.1);
  }

  .feature-card:hover::before {
    height: 100%;
  }

  .feature-icon {
    font-size: 2.8rem;
    color: var(--gold);
    margin-bottom: 2rem;
    transition: transform 0.4s ease;
  }

  .feature-card:hover .feature-icon {
    transform: scale(1.1);
  }

  h3 {
    font-size: 1.4rem;
    margin-bottom: 1.2rem;
    color: var(--text-dark);
    font-family: "Playfair Display", serif;
    font-weight: 600;
    position: relative;
    padding-bottom: 0.8rem;
  }

  h3::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 40px;
    height: 1px;
    background-color: var(--gold-light);
  }

  p {
    color: var(--text-light);
    line-height: 1.8;
    font-weight: 300;
    font-size: 0.95rem;
    letter-spacing: 0.01em;
  }

  @media (max-width: 768px) {
    .features-grid {
      grid-template-columns: 1fr;
    }

    .features-section {
      padding: 5rem 1.5rem;
    }

    h2 {
      font-size: 2rem;
    }
  }
</style>
